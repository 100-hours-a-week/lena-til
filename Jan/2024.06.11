# 2024.06.11

# LENA_TIL

2024.06.11

### 스크럼

- 학습 목표 1 : 내코드 이해

### 새로 배운 내용

### 주제 1:어떻게 공부를 해야하는가

오늘의 고충: 일단 뭘 어떻게 시작해야하는지 어떤 방법이 맞는지 모르겠고 수업 내용이나 찾아본 이론 내용을 내 프로젝트에 어떻게 적용시켜야하는지 감이 안 잡혀 gpt에게 나의 프로젝트를 열심히 설명하니 코드를 짜 주었다. 그러나 그 코드 또한 내가 이해하지 못하기 때문에 일단 코드를 뜯어보며 어떤 구조로 만든건지 감을 잡아가는 중이며 중간중간 모르는 개념을 검색하거나 gpt에게 물어보며 노션에 기록하고있다. 이 방식이 맞는건지 모르겠고 아닌것같긴한데 일단  그러는 중이다. gpt코드를 넣어도 에러가 나서 멘탈이 나간 상태이다ㅏ.애초에 내가 만든 클래스구조가 맞는지 그 클래스 구조에 어떤 속성과 메서드가 들어가야하는지 아직도 이런 고민 하고있는 내가 진짜 노답,,,

<aside>
🐶 보이드 멘토님의 피드백

1. 에러가 무엇인지 읽으시고, 영어를 못하시면 영어를 번역기에 돌려보세요. 초반엔 너무 지피티에 의존하면 안돼요
2. 일단 코드를 한글로 적어보세요 한줄 한줄 주석 달고 연락주세요 선생님 시키는대로 하셔요
</aside>

결론: 일단 주석을 달아보기.

### 주제 2:어떻게 공부를 해야하는가2 집중편

고충2: 집중이 안된다 일단 앉아있기는 하는데 내가 뭘 했는지 모르겠고 상태는 똑같다. 점점 집중하기가 어려워지고 문제는 안풀리고 진적이 없으니 스트레수,,

<aside>
🐶 보이드 멘토님의 피드백
나

1. 누구나 이해할 수 있게 일반인도 이해할 수 있게 나만의 교재를 만들어라. 
2. 나만의 교재는 키워드부터 파고 이해해야한다. 유튜브보다 검색이 좋고 정 모르는건 지피티에게 쉽게 설명해달라고 해야한다. 
</aside>

### 주제 2:자바 프로젝트

상황: 아래와 같은 에러문이 뜬다. 

![스크린샷 2024-06-12 오전 2.34.49.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/4e94ca74-0949-4be2-af73-6e6724ed0c01/77b9c2ad-fcb1-44aa-a1ce-076c0da1b6df/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA_2024-06-12_%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB_2.34.49.png)

원인: 이 오류는 `role` 필드가 `protected`로 선언되어 있어, 해당 필드에 직접 접근하려는 시도가 실패하는 경우 발생합니다. 

해결방법: `role` 필드에 접근할 수 있도록 getter 메서드를 추가하거나, 접근 권한을 수정하는 방법으로 해결할 수 있습니다.

주의: `protected` 대신 `public`으로 변경하면 외부 클래스에서 해당 필드에 직접 접근할 수 있습니다. 하지만 이는 권장되지 않습니다. 대신, 일반적으로 `private` 접근 제어자를 사용하고, 필요할 경우 getter와 setter 메서드를 사용하는 것이 좋습니다.

이유:`public` 필드가 권장되지 않는 이유는 객체지향 프로그래밍의 중요한 원칙 중 하나인 **캡슐화(encapsulation)**를 위반하기 때문입니다. 캡슐화는 객체의 상태(state)를 보호하고, 객체의 내부 구현을 숨기며, 객체와 객체 간의 상호 작용을 정의하는 중요한 원칙입니다. 

### 이유 1: 데이터 무결성 보장

- **문제**: `public` 필드는 클래스 외부에서 직접 접근 및 수정이 가능하기 때문에, 의도하지 않은 변경이나 잘못된 값이 설정될 수 있습니다.
- **해결**: `private` 필드를 사용하고, 적절한 getter와 setter 메서드를 통해 접근 및 수정할 수 있도록 제한함으로써, 데이터 무결성을 보장할 수 있습니다. 이를 통해 잘못된 값이 설정되는 것을 방지할 수 있습니다.

### 이유 2: 캡슐화 원칙 준수

- **문제**: `public` 필드는 클래스의 내부 구현 세부 사항을 외부에 노출시킵니다. 이는 클래스의 내부 구조가 변경될 때, 그 클래스를 사용하는 모든 코드가 영향을 받게 만듭니다.
- **해결**: `private` 필드를 사용하고, getter와 setter 메서드를 제공하면, 내부 구현을 숨기고 인터페이스만 공개할 수 있습니다. 이는 내부 구조 변경 시 외부 코드에 미치는 영향을 최소화할 수 있습니다.

### 이유 3: 유지보수성 향상

- **문제**: `public` 필드를 사용하면, 객체 상태 변경에 대한 제어가 어려워져 유지보수가 어려워집니다.
- **해결**: getter와 setter 메서드를 사용하면, 필드 값 변경 시 추가적인 로직(예: 유효성 검사, 로깅)을 쉽게 추가할 수 있어 유지보수성이 향상됩니다.

### 대안: `private` 필드와 getter/setter 메서드 사용

다음은 `private` 필드와 getter/setter 메서드를 사용하는 예시입니다.

---

### 오늘의 도전 과제와 해결 방법

- 도전 과제 1: 6주차 과제
    - 일단 주석을 달아보자

### 오늘의 회고

- 공부를 어떻게 해야하나 어디서부터 프로젝트를 만들어가야하나 막막했지만 그냥 하면 어째저째 된다. 시작이 반이라는 말이 생각났다. 막막해서 계속 미루지말고 일단 키보드 그냥 냅다 뚜들겨봐야한다.  오늘도 냅다 뚜드리니  드디어 에러가 안 나오고 출력을 처음으로 했다. 남들에게는 별 일 아니지만 난 쫌 감격,,
- 아 그리고 트레이니는 굳이 종목별로 나눌 필요가 없지 않을까?